const botToken = "6905026549:AAH-0fy_rTvYqsd7FjqB82VvuLRd0OYMoFI";
const chatId = "@tomsk_24_7night";

document.getElementById('feedbackForm').addEventListener('submit', function(event) {
    event.preventDefault();

    const form = event.target;
    const name = document.getElementById('name').value.trim();
    const email = document.getElementById('email').value.trim();
    const comment = document.getElementById('comment').value.trim();
    const photo = document.getElementById('photo').files[0];

    if (!name || !email || !comment) {
        alert("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!");
        return;
    }

    const message = `üìù *–ù–æ–≤—ã–π –æ—Ç–∑—ã–≤:*\nüë§ *–ò–º—è:* ${name}\nüìß *Email:* ${email}\nüí¨ *–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:* ${comment}`;
    
    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞
    fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
        method: 'POST',
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
            chat_id: chatId,
            text: message,
            parse_mode: "Markdown"
        })
    }).then(response => response.json())
    .then(data => {
        if (data.ok && !photo) {
            alert("–û—Ç–∑—ã–≤ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!");
            form.reset(); // –û—á–∏—Å—Ç–∫–∞ —Ñ–æ—Ä–º—ã
        }
    });

    // –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ–æ—Ç–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ –æ—Ç–¥–µ–ª—å–Ω–æ
    if (photo) {
        const formData = new FormData();
        formData.append('chat_id', chatId);
        formData.append('photo', photo);
        formData.append('caption', `üì∑ –§–æ—Ç–æ –æ—Ç ${name}`);

        fetch(`https://api.telegram.org/bot${botToken}/sendPhoto`, {
            method: 'POST',
            body: formData
        })
        .then(response => response.json())
        .then(data => {
            if (data.ok) {
                alert("–û—Ç–∑—ã–≤ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!");
                form.reset(); // –û—á–∏—Å—Ç–∫–∞ —Ñ–æ—Ä–º—ã –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ
            } else {
                alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ.");
            }
        })
        .catch(error => {
            alert("–û—à–∏–±–∫–∞: " + error);
        });
    }
});
